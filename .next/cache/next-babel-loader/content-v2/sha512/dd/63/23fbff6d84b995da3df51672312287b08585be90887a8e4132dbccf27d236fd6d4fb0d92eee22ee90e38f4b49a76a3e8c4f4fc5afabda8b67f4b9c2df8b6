{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _jsxFileName = \"/Users/ultrasounder/Developer/shopify-dev/scripttag/components/ProductList.js\",\n    _s = $RefreshSig$();\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n\\nquery getProducts($ids: [ID!]!){\\n    nodes(ids: $ids){\\n      ... on Product{\\n        title\\n        handle\\n        id\\n        images(first: 1){\\n          edges{\\n            node{\\n              originalSrc\\n              altText\\n            }\\n          }\\n        }\\n        variants(first: 1){\\n          edges{\\n            node{\\n              price\\n              id\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n  \"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport gql from 'graphql-tag';\nimport { useQuery } from '@apollo/react-hooks';\nimport { Card, ResourceList, Stack, TextStyle, Thumbnail } from '@shopify/polaris';\nimport store from 'store-js';\nvar GET_PRODUCTS_BY_ID = gql(_templateObject());\n\nfunction ProductList() {\n  _s();\n\n  var _useQuery = useQuery(GET_PRODUCTS_BY_ID, {\n    variable: {\n      ids: store.get('ids')\n    }\n  }),\n      loading = _useQuery.loading,\n      error = _useQuery.error,\n      data = _useQuery.data;\n\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 25\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"(console.error();\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \" Hello from Peroduct List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 7\n  }, this);\n}\n\n_s(ProductList, \"ATRudwUnWENk7lEGiyv3yjumjxE=\", false, function () {\n  return [useQuery];\n});\n\n_c = ProductList;\nexport default ProductList;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductList\");","map":{"version":3,"sources":["/Users/ultrasounder/Developer/shopify-dev/scripttag/components/ProductList.js"],"names":["gql","useQuery","Card","ResourceList","Stack","TextStyle","Thumbnail","store","GET_PRODUCTS_BY_ID","ProductList","variable","ids","get","loading","error","data"],"mappings":";;;;;;;;;;;;;;;;AAAA,OAAOA,GAAP,MAAgB,aAAhB;AACA,SAAOC,QAAP,QAAsB,qBAAtB;AACA,SAAOC,IAAP,EAAaC,YAAb,EAA2BC,KAA3B,EAAkCC,SAAlC,EAA6CC,SAA7C,QAA6D,kBAA7D;AACA,OAAOC,KAAP,MAAkB,UAAlB;AAEA,IAAMC,kBAAkB,GAAGR,GAAH,mBAAxB;;AA6BE,SAASS,WAAT,GAAsB;AAAA;;AAAA,kBAEUR,QAAQ,CAACO,kBAAD,EAAqB;AAACE,IAAAA,QAAQ,EAAE;AAACC,MAAAA,GAAG,EAAEJ,KAAK,CAACK,GAAN,CAAU,KAAV;AAAN;AAAX,GAArB,CAFlB;AAAA,MAEdC,OAFc,aAEdA,OAFc;AAAA,MAELC,KAFK,aAELA,KAFK;AAAA,MAEEC,IAFF,aAEEA,IAFF;;AAIpB,MAAIF,OAAJ,EAAa,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAEb,MAAIC,KAAJ,EAAW,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAGX,sBACE;AAAA,2BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;GAdQL,W;UAEuBR,Q;;;KAFvBQ,W;AAgBT,eAAeA,WAAf","sourcesContent":["import gql from 'graphql-tag';\nimport{useQuery} from '@apollo/react-hooks';\nimport{Card, ResourceList, Stack, TextStyle, Thumbnail} from '@shopify/polaris';\nimport store from 'store-js';\n\nconst GET_PRODUCTS_BY_ID = gql`\n\nquery getProducts($ids: [ID!]!){\n    nodes(ids: $ids){\n      ... on Product{\n        title\n        handle\n        id\n        images(first: 1){\n          edges{\n            node{\n              originalSrc\n              altText\n            }\n          }\n        }\n        variants(first: 1){\n          edges{\n            node{\n              price\n              id\n            }\n          }\n        }\n      }\n    }\n  }\n  `;\n\n  function ProductList(){\n\n    const{loading, error, data} = useQuery(GET_PRODUCTS_BY_ID, {variable: {ids: store.get('ids')}})\n\n    if (loading) return <div>Loading...</div>\n\n    if (error) return <div>(console.error();</div>\n\n\n    return (\n      <div>\n        <h1> Hello from Peroduct List</h1>\n      </div>\n    )\n  }\n\n  export default ProductList;\n    "]},"metadata":{},"sourceType":"module"}