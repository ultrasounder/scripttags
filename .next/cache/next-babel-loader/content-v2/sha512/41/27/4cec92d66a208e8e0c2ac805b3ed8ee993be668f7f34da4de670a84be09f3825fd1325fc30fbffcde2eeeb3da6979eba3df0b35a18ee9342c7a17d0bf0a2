{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/ultrasounder/Developer/shopify-dev/scripttag/components/ProductList.js\";\n// import gql from 'graphql-tag';\n// import {useQuery } from '@apollo/react-hooks';\nimport { gql, useQuery } from '@apollo/client';\nimport { Card, ResourceList, Stack, TextStyle, Thumbnail } from '@shopify/polaris';\nimport store from 'store-js';\nconst GET_PRODUCTS_BY_ID = gql`\n  query getProducts($ids: [ID!]!) {\n    nodes(ids: $ids) {\n      ... on Product {\n        title\n        handle\n        id\n        images(first: 1) {\n          edges {\n            node {\n              originalSrc\n              altText\n            }\n          }\n        }\n        variants(first: 1) {\n          edges {\n            node {\n              price\n              id\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nfunction ProductList() {\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(GET_PRODUCTS_BY_ID, {\n    variables: {\n      ids: store.get('ids')\n    }\n  });\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: error.message\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(ResourceList, {\n        showHeader: true,\n        resourceName: {\n          singular: 'Product',\n          plural: 'Products'\n        },\n        items: data.nodes,\n        renderItem: item => {\n          const media = /*#__PURE__*/_jsxDEV(Thumbnail, {\n            source: item.images.edges[0] ? item.images.edges[0].node.originalSrc : '',\n            alt: item.images.edges[0] ? item.images.edges[0].altText : ''\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 15\n          }, this);\n\n          const price = item.variants.edges[0].node.price;\n          return /*#__PURE__*/_jsxDEV(ResourceList.Item, {\n            id: item.id,\n            media: media,\n            accessibilityLabel: `View details for ${item.title}`,\n            children: /*#__PURE__*/_jsxDEV(Stack, {\n              children: [/*#__PURE__*/_jsxDEV(Stack.Item, {\n                fill: true,\n                children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: /*#__PURE__*/_jsxDEV(TextStyle, {\n                    variation: \"strong\",\n                    children: item.title\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 71,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 70,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Stack.Item, {\n                children: /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"$\", price]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 77,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 15\n          }, this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\nexport default ProductList;","map":{"version":3,"sources":["/Users/ultrasounder/Developer/shopify-dev/scripttag/components/ProductList.js"],"names":["gql","useQuery","Card","ResourceList","Stack","TextStyle","Thumbnail","store","GET_PRODUCTS_BY_ID","ProductList","loading","error","data","variables","ids","get","message","singular","plural","nodes","item","media","images","edges","node","originalSrc","altText","price","variants","id","title"],"mappings":";;;AAAA;AACA;AACA,SAASA,GAAT,EAAcC,QAAd,QAA8B,gBAA9B;AACA,SAASC,IAAT,EAAeC,YAAf,EAA6BC,KAA7B,EAAoCC,SAApC,EAA+CC,SAA/C,QAAgE,kBAAhE;AACA,OAAOC,KAAP,MAAkB,UAAlB;AAEA,MAAMC,kBAAkB,GAAGR,GAAI;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CA1BA;;AA4BA,SAASS,WAAT,GAAuB;AAErB,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,MAA2BX,QAAQ,CAACO,kBAAD,EAAqB;AAAEK,IAAAA,SAAS,EAAE;AAAEC,MAAAA,GAAG,EAAEP,KAAK,CAACQ,GAAN,CAAU,KAAV;AAAP;AAAb,GAArB,CAAzC;AAGA,MAAIL,OAAJ,EAAa,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACb,MAAIC,KAAJ,EAAW,oBAAO;AAAA,cAAMA,KAAK,CAACK;AAAZ;AAAA;AAAA;AAAA;AAAA,UAAP;AAEX,sBACE;AAAA,2BACE,QAAC,IAAD;AAAA,6BACE,QAAC,YAAD;AACE,QAAA,UAAU,MADZ;AAEE,QAAA,YAAY,EAAE;AAAEC,UAAAA,QAAQ,EAAE,SAAZ;AAAuBC,UAAAA,MAAM,EAAE;AAA/B,SAFhB;AAGE,QAAA,KAAK,EAAEN,IAAI,CAACO,KAHd;AAIE,QAAA,UAAU,EAAEC,IAAI,IAAI;AAClB,gBAAMC,KAAK,gBACT,QAAC,SAAD;AACE,YAAA,MAAM,EACJD,IAAI,CAACE,MAAL,CAAYC,KAAZ,CAAkB,CAAlB,IAAuBH,IAAI,CAACE,MAAL,CAAYC,KAAZ,CAAkB,CAAlB,EAAqBC,IAArB,CAA0BC,WAAjD,GAA+D,EAFnE;AAIE,YAAA,GAAG,EACDL,IAAI,CAACE,MAAL,CAAYC,KAAZ,CAAkB,CAAlB,IAAuBH,IAAI,CAACE,MAAL,CAAYC,KAAZ,CAAkB,CAAlB,EAAqBG,OAA5C,GAAsD;AAL1D;AAAA;AAAA;AAAA;AAAA,kBADF;;AAUA,gBAAMC,KAAK,GAAGP,IAAI,CAACQ,QAAL,CAAcL,KAAd,CAAoB,CAApB,EAAuBC,IAAvB,CAA4BG,KAA1C;AACA,8BACE,QAAC,YAAD,CAAc,IAAd;AACE,YAAA,EAAE,EAAEP,IAAI,CAACS,EADX;AAEE,YAAA,KAAK,EAAER,KAFT;AAGE,YAAA,kBAAkB,EAAG,oBAAmBD,IAAI,CAACU,KAAM,EAHrD;AAAA,mCAKE,QAAC,KAAD;AAAA,sCACE,QAAC,KAAD,CAAO,IAAP;AAAY,gBAAA,IAAI,MAAhB;AAAA,uCACE;AAAA,yCACE,QAAC,SAAD;AAAW,oBAAA,SAAS,EAAC,QAArB;AAAA,8BACGV,IAAI,CAACU;AADR;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,sBADF,eAQE,QAAC,KAAD,CAAO,IAAP;AAAA,uCACE;AAAA,kCAAKH,KAAL;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,sBARF;AAAA;AAAA;AAAA;AAAA;AAAA;AALF;AAAA;AAAA;AAAA;AAAA,kBADF;AAoBD;AApCH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AA4CD;;AAED,eAAelB,WAAf","sourcesContent":["// import gql from 'graphql-tag';\n// import {useQuery } from '@apollo/react-hooks';\nimport { gql, useQuery } from '@apollo/client';\nimport { Card, ResourceList, Stack, TextStyle, Thumbnail } from '@shopify/polaris';\nimport store from 'store-js';\n\nconst GET_PRODUCTS_BY_ID = gql`\n  query getProducts($ids: [ID!]!) {\n    nodes(ids: $ids) {\n      ... on Product {\n        title\n        handle\n        id\n        images(first: 1) {\n          edges {\n            node {\n              originalSrc\n              altText\n            }\n          }\n        }\n        variants(first: 1) {\n          edges {\n            node {\n              price\n              id\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nfunction ProductList() {\n\n  const { loading, error, data } = useQuery(GET_PRODUCTS_BY_ID, { variables: { ids: store.get('ids') } })\n\n\n  if (loading) return <div>Loading...</div>\n  if (error) return <div>{error.message}</div>\n\n  return (\n    <>\n      <Card>\n        <ResourceList\n          showHeader\n          resourceName={{ singular: 'Product', plural: 'Products' }}\n          items={data.nodes}\n          renderItem={item => {\n            const media = (\n              <Thumbnail\n                source={\n                  item.images.edges[0] ? item.images.edges[0].node.originalSrc : ''\n                }\n                alt={\n                  item.images.edges[0] ? item.images.edges[0].altText : ''\n                }\n              />\n            );\n            const price = item.variants.edges[0].node.price;\n            return (\n              <ResourceList.Item\n                id={item.id}\n                media={media}\n                accessibilityLabel={`View details for ${item.title}`}\n              >\n                <Stack>\n                  <Stack.Item fill>\n                    <h3>\n                      <TextStyle variation='strong'>\n                        {item.title}\n                      </TextStyle>\n                    </h3>\n                  </Stack.Item>\n                  <Stack.Item>\n                    <p>${price}</p>\n                  </Stack.Item>\n                </Stack>\n              </ResourceList.Item>\n            )\n          }}\n        />\n      </Card>\n    </>\n  )\n}\n\nexport default ProductList;"]},"metadata":{},"sourceType":"module"}